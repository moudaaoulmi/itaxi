<?xml version="1.0" encoding="UTF-8"?>
<!-- <H3>Taxi!</H3> taxi-o-matic -->
<agent xmlns="http://jadex.sourceforge.net/jadex-bdi" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="Taxi" package="itaxi.jadex.taxi">

	<imports>
		<import>jadex.commons.*</import>
		<import>jadex.commons.service.*</import>
		<import>jadex.base.fipa.*</import>
		<import>java.util.logging.*</import>
		<import>jadex.planlib.*</import>
		<import>com.google.gson.Gson</import>
		<import>itaxi.communications.communicator.Communicator</import>
	</imports>

	<capabilities>
		<!-- Include the directory facilitator capability under the name dfcap. -->
		<capability name="dfcap" file="jadex.bdi.planlib.df.DF" />
	</capabilities>

	<beliefs>
		<belief name="monitorCom" class="Communicator" >
			<fact>null</fact>
		</belief>
		
		<belief name="latitude" class="int">
			<fact>38742365</fact>
		</belief>

		<belief name="longitude" class="int">
			<fact>-9140106</fact>
		</belief>

		<belief name="gas" class="int">
			<fact>100</fact>
		</belief>

		<belief name="maxgas" class="int">
			<fact>100</fact>
		</belief>

	</beliefs>

	<goals>
		
		<!-- Sub-Goals -->
		<achievegoal name="move" recur="true" recurdelay="5000">
			<parameter name="positionlatitude" class="int" />
			<parameter name="positionlongitude" class="int" />
			<targetcondition>
				$beliefbase.latitude == $goal.positionlatitude
				&amp;&amp;
				$beliefbase.longitude == $goal.positionlongitude
			</targetcondition>
		</achievegoal>

		<!-- Imported DF-Goals -->

		<!-- Make the keep registered goal available. -->
		<maintaingoalref name="df_keep_registered">
			<concrete ref="dfcap.df_keep_registered" />
		</maintaingoalref>

		<achievegoalref name="df_search">
			<concrete ref="dfcap.df_search" />
		</achievegoalref>

		<achievegoalref name="df_deregister">
			<concrete ref="dfcap.df_deregister" />
		</achievegoalref>
		
		<performgoal name="diegoal">
		</performgoal>


	</goals>

	<plans>
		<plan name="submoveto">
			<parameter name="latitude" class="int">
				<goalmapping ref="move.positionlatitude" />
			</parameter>
			<parameter name="longitude" class="int">
				<goalmapping ref="move.positionlongitude" />
			</parameter>

			<body class="SubMoveToPlan">
			</body>

			<trigger>
				<goal ref="move">
				</goal>
			</trigger>

		</plan>

		<plan name="freeroam">
			<body class="FreeRoamPlan">
			</body>
		</plan>
		
		<plan name="die">
			<body class="DiePlan">
			</body>
			<trigger>
				<goal ref="diegoal"></goal>
			</trigger>
		</plan>
	</plans>

	<properties>
		<!-- Only log outputs >= level are printed. -->
		<property name="logging.level">Level.INFO</property>
		<!-- The default parent handler prints out log messages on the console. -->
		<property name="logging.useParentHandlers">true</property>
		<!--<property name="debugging">true</property> -->
		<property name="dfservice" class="IFuture">SServiceProvider.getService($scope.getServiceProvider(),IDF.class)
		</property>
	</properties>

	<configurations>
		<configuration name="default">
 
			<goals>
				<initialgoal ref="df_keep_registered">
					<parameter ref="description">
						<value>
							$propertybase.getProperty("dfservice")
							.createDFComponentDescription(null,
							$propertybase.getProperty("dfservice")
							.createDFServiceDescription("service_taxi", "taxi", "IST"))
 						</value>
					</parameter>
					<parameter ref="leasetime">
						<value>20000</value>
					</parameter>
				</initialgoal>

				<!-- End goal to deregister the agent at shutdown. -->
				<endgoal ref="df_deregister" />
				<endgoal ref="diegoal" />
			</goals>

			<plans>
				<initialplan ref="freeroam" />
				<endplan ref="die" />
			</plans>
		</configuration>
	</configurations>

</agent>

