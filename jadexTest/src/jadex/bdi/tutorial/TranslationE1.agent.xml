<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>TranslationAgent: Lesson E1.</H3>
	Using a translation subgoal.
	<H4>Explanation</H4>
	The agent has an initial plan that reacts on all
	requests. It does not handle this requests by itself
	but instead creates subgoals and waits for their
	completion.
-->
<agent xmlns="http://jadex.sourceforge.net/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="TranslationE1"
	package="jadex.bdi.tutorial">

	<imports>
		<import>jadex.commons.*</import>
		<import>jadex.base.fipa.*</import>
		<import>java.util.logging.*</import>
	</imports>

	<beliefs>
		<!-- This beliefset contains the english-german dictionary as facts. -->
		<beliefset name="egwords" class="Tuple">
			<fact>new Tuple("milk", "Milch")</fact>
			<fact>new Tuple("cow", "Kuh")</fact>
			<fact>new Tuple("cat", "Katze")</fact>
			<fact>new Tuple("dog", "Hund")</fact>
		</beliefset>
		<!-- This beliefset contains the english-french dictionary as facts. -->
		<beliefset name="efwords" class="Tuple">
			<fact>new Tuple("milk", "lait")</fact>
			<fact>new Tuple("cow", "vache")</fact>
			<fact>new Tuple("cat", "chat")</fact>
			<fact>new Tuple("dog", "chien")</fact>
		</beliefset>
	</beliefs>

	<goals>
		<!-- Specifies a translation goal type with parameters for the translation
			direction, the word to translate and the result. -->
		<achievegoal name="translate">
			<parameter name="direction" class="String"/>
			<parameter name="word" class="String"/>
			<parameter name="result" class="String" direction="out"/>
		</achievegoal>
	</goals>

	<plans>
		<!-- Initial plan for handling all message requests. Has the task to
			create appropriate translation subgoals. Uses a waitqueue to store
 			message events that arrived during the plan was busy. -->
		<plan name="process">
			<body class="ProcessTranslationRequestPlanE1"/>
			<waitqueue>
				<messageevent ref="request_translation"/>
			</waitqueue>
		</plan>
		<!-- Passive plan for translating words from English to German.
			Reacts only on English-German translation goals. -->
		<plan name="egtrans">
			<parameter name="word" class="String">
				<goalmapping ref="translate.word"/>
			</parameter>
			<parameter name="result" class="String" direction="out">
				<goalmapping ref="translate.result"/>
			</parameter>
			<body class="EnglishGermanTranslationPlanE1"/>
			<trigger>
				<goal ref="translate">
					<match>"english_german".equals($goal.getParameter("direction").getValue())</match>
					<!--<parameter ref="direction">
						<value></value>
					</parameter>-->
				</goal>
			</trigger>
		</plan>
		<!-- Passive plan for translating words from English to German.
			Reacts only on English-French translation goals. -->
		<plan name="eftrans">
			<parameter name="word" class="String">
				<goalmapping ref="translate.word"/>
			</parameter>
			<parameter name="result" class="String" direction="out">
				<goalmapping ref="translate.result"/>
			</parameter>
			<body class="EnglishFrenchTranslationPlanE1"/>
			<trigger>
				<goal ref="translate">
					<match>"english_french".equals($goal.getParameter("direction").getValue())</match>
					<!--<parameter ref="direction">
						<value>"english_french"</value>
					</parameter>-->
				</goal>
			</trigger>
		</plan>
	</plans>

	<events>
		<!-- Specifies a translation request being all messages with performative request. -->
		<messageevent name="request_translation" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
		</messageevent>
	</events>

	<expressions>
		<!-- This query selects the first matching entry from the English - German
			dictionary, whereby the parameter $eword is compared to the first
			element of a belief set tuple. -->
		<expression name="query_egword">
			select one $wordpair.get(1)
			from Tuple $wordpair in $beliefbase.egwords
			where $wordpair.get(0).equals($eword)
			<!-- <parameter name="$eword" class="String"/> -->
		</expression>
		<!-- This query selects the first matching entry from the English - French
			dictionary, whereby the parameter $eword is compared to the first
			element of a belief set tuple. -->
		<expression name="query_efword">
			select one $wordpair.get(1)
			from Tuple $wordpair in $beliefbase.efwords
			where $wordpair.get(0).equals($eword)
			<!-- <parameter name="$eword" class="String"/> -->
		</expression>
	</expressions>

	<properties>
 		<!-- Only log outputs >= level are printed. -->
       <property name="logging.level">Level.INFO</property>
 		<!-- The default parent handler prints out log messages on the console. -->
       <property name="logging.useParentHandlers">true</property>
    </properties>

	<configurations>
		<configuration name="default">
			<plans>
				<initialplan ref="process"/>
			</plans>
		</configuration>
	</configurations>

</agent>

