<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>TranslationAgent: Lesson F4.</H3>
	Establishing a multi-agent scenario.
	<H4>Explanation</H4>
	This example shows how a multi-agent scenario can
	be set-up using the DF. The user agent offers a service
	for translating sentences. It issues translation requests
	for all contained words to a present translation agent
	which is searched by the DF.
-->
<agent xmlns="http://jadex.sourceforge.net/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="UserF4"
	package="jadex.bdi.tutorial">

	<imports>
		<import>jadex.planlib.*</import>
		<import>jadex.base.fipa.*</import>
		<import>java.util.logging.*</import>
	</imports>

	<capabilities>
		<!-- Include the protocols cap. -->
		<capability name="procap" file="jadex.bdi.planlib.protocols.request.Request"/>
		<!-- Include the df cap. -->
		<capability name="dfcap" file="jadex.bdi.planlib.df.DF"/>
	</capabilities>

	<goals>
		<!-- Include request goal type from dfcap. -->
		<achievegoalref name="rp_initiate">
			<concrete ref="procap.rp_initiate"/>
		</achievegoalref>

		<!-- Include df search goal type from dfcap. -->
		<achievegoalref name="df_search">
			<concrete ref="dfcap.df_search"/>
		</achievegoalref>
	</goals>

	<plans>
		<!-- Initial plan for translating sentences from English to German.
 			Does this by translating each word separately.
 			Reacts on translate sentence requests. -->
		<plan name="egtrans">
			<body class="EnglishGermanTranslateSentencePlanF4"/>
			<waitqueue>
 				<messageevent ref="request_translatesentence"/>
			</waitqueue>
		</plan>
	</plans>

	<events>
		<!-- Specifies a translation request being all messages with performative
			request and start with a specific string "translate_sentence english_german". -->
		<messageevent name="request_translatesentence" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<match>$content instanceof String &amp;&amp; ((String)$content).startsWith("translate_sentence english_german")</match>
		</messageevent>
		<!-- The answer message after success. -->
		<messageevent name="inform" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
		<!-- The answer message after some error occurred. -->
		<messageevent name="failure" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.FAILURE</value>
			</parameter>
		</messageevent>
	</events>

	<properties>
 		<!-- Only log outputs >= level are printed. -->
       <property name="logging.level">Level.INFO</property>
 		<!-- The default parent handler prints out log messages on the console. -->
       <property name="logging.useParentHandlers">true</property>
    </properties>

	<configurations>
		<configuration name="default">
			<plans>
				<initialplan ref="egtrans"/>
			</plans>
		</configuration>
	</configurations>

</agent>
